import axios from 'axios';
import bcrypt from 'bcrypt';

// Ng∆∞·ªùi d√πng m·∫´u ƒë·ªÉ t·∫°o
const defaultUsers = [
  { username: 'test123', password: 'test123' },
  { username: 'hoaiphu', password: 'test123' }
];

// URL c·ªßa user-service 
const USER_SERVICE_URL = process.env.USER_SERVICE_URL || 'http://user-service:8080';

async function seedUsers() {
  console.log('üå± B·∫Øt ƒë·∫ßu t·∫°o ng∆∞·ªùi d√πng m·∫∑c ƒë·ªãnh...');
  
  for (const user of defaultUsers) {
    try {
      // Th·ª≠ ƒëƒÉng k√Ω ng∆∞·ªùi d√πng 
      const response = await axios.post(`${USER_SERVICE_URL}/api/users/register`, user);
      console.log(`‚úÖ ƒê√£ t·∫°o th√†nh c√¥ng ng∆∞·ªùi d√πng: ${user.username}`);
    } catch (error) {
      if (error.response && error.response.status === 409) {
        console.log(`‚ÑπÔ∏è Ng∆∞·ªùi d√πng ${user.username} ƒë√£ t·ªìn t·∫°i, b·ªè qua.`);
      } else {
        console.error(`‚ùå Kh√¥ng th·ªÉ t·∫°o ng∆∞·ªùi d√πng ${user.username}:`, error.message);
      }
    }
  }
  
  console.log('‚úÖ ƒê√£ ho√†n th√†nh vi·ªác t·∫°o ng∆∞·ªùi d√πng m·∫∑c ƒë·ªãnh.');
}

// Ch·ªù v√†i gi√¢y ƒë·ªÉ user-service kh·ªüi ƒë·ªông ho√†n t·∫•t
setTimeout(() => {
  seedUsers().catch(err => {
    console.error('‚ùå L·ªói khi ch·∫°y script t·∫°o ng∆∞·ªùi d√πng:', err);
  });
}, 10000); // ƒê·ª£i 10 gi√¢y 